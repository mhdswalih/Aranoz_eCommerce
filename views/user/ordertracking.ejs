<style>
    .order-list {
        margin-top: 30px;
        background-color: #f9f9f9;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .order-item {
        background-color: #fff;
        border: 1px solid #ddd;
        border-radius: 10px;
        margin-bottom: 20px;
        padding: 20px;
        transition: box-shadow 0.3s ease;
    }

    .order-item:hover {
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    }

    .product-title {
        font-size: 18px;
        font-weight: 600;
        color: #333;
    }

    .product-price {
        font-size: 16px;
        color: #ff5a00;
        font-weight: 500;
    }

    .cancel-order-btn {
        background-color: #ff5a00;
        color: #fff;
        border: none;
        padding: 8px 15px;
        border-radius: 5px;
        font-size: 14px;
        transition: background-color 0.3s ease;
    }

    .cancel-order-btn:hover {
        background-color: #e14b00;
    }

    .product-tracker h3 {
        font-size: 16px;
        font-weight: 500;
        color: #333;
    }

    .tracker-status {
        font-size: 14px;
        font-weight: 600;
        color: #28a745;
    }

    @media (max-width: 768px) {
        .order-item .col-md-3,
        .order-item .col-md-6,
        .order-item .col-md-3 {
            text-align: center;
            margin-bottom: 15px;
        }

        .order-item .col-md-6 {
            order: 2;
        }

        .order-item .col-md-3:last-child {
            order: 3;
        }
    }
</style>

<!-- Bootstrap CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<!-- Bootstrap JS Bundle with Popper -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<%- include('../layout/usernav') %>

<section class="breadcrumb breadcrumb_bg">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-8">
                <div class="breadcrumb_iner">
                    <div class="breadcrumb_iner_item">
                        <h2>Order List</h2>
                        <p>Home <span>-</span> Orders</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<section class="confirmation_part section_padding">
    <div class="container">
        <div class="order-list">
            <h1 class="primary-title">Your Orders</h1>

            <% orders.forEach(orderItem => { %>
            <div class="order-item" data-order-id="<%= orderItem._id %>">
                <div class="row align-items-center">
                    <% orderItem.products.forEach(product => { %>
                    <div class="col-md-3">
                        <img src="/products/<%= product.productId.image1 %>" alt="Product Image" class="img-fluid">
                    </div>
                    <div class="col-md-6">
                        <h2 class="product-title"><%= product.productId.productname %></h2>
                        <p class="product-price">
                            â‚¹<%= (product.discountedPrice && product.discountedPrice < product.productId.productprice
                              ? product.discountedPrice * product.productquantity
                              : product.productId.productprice * product.productquantity).toFixed(2) %>
                          </p>
                          
                        <p>Status: <strong><%= product.orderStatus %></strong></p>
                        <p>PaymentStatus: <strong><%= orderItem.paymentStatus %></strong></p>
                    </div>
                    
                    <div class="col-md-3 text-end">
                        
                        <!-- View Product Button -->
                        <button type="button" class="genric-btn danger-border small view-product-btn" 
                        data-product-name="<%= product.productId.productname %>"
                        data-product-image="/products/<%= product.productId.image1 %>"
                        data-product-price="<%= product.discountedPrice && product.discountedPrice < product.productId.productprice 
                            ? product.discountedPrice 
                            : product.productId.productprice %>"
                        data-product-category="<%= product.productId.category ? product.productId.category.name : 'N/A' %>" 
                        data-product-description="<%= product.productId.productdescription %>"
                        data-bs-toggle="modal" 
                        data-bs-target="#productModal">
                        View Product
                    </button>
                    
                           
                        <!-- Action Buttons -->
                        <div style="position: relative; padding-top: 20px;">
                            <% if (product.orderStatus !== 'Cancelled' && product.orderStatus !== 'Delivered' &&product.orderStatus !=='Returning'&&product.orderStatus !=='Returned') { %>
                                <button type="button" class="genric-btn danger-border small cancel-order-btn" 
                                        data-item-id="<%= product._id %>" 
                                        data-product-id="<%= product.productId._id %>">
                                    Cancel Order
                                </button>
                            <% } %>

                            <% if (product.orderStatus === 'Delivered') { %>
                                <button type="button" class="genric-btn danger-border small return-order-btn" 
                                data-item-id="<%= product._id %>" 
                                data-product-id="<%= product.productId._id %>"
                                data-bs-toggle="modal" 
                                data-bs-target="#returnReasonModal">
                                    Return
                                </button>
                                 
                            <% } %>
                            <%if(orderItem.paymentStatus === 'Pending'){%>
                                <button type="button" class="genric-btn danger-border small repay-order-btn"
                                data-item-id="<%= product._id %>"
                                data-product-id="<%= product.productId._id %>"
                                data-order-id="<%= orderItem._id %>"
                                data-amount="<%= (product.productId.discountedPrice && product.productId.discountedPrice < product.productId.productprice
                                    ? product.productId.discountedPrice 
                                    : product.productId.productprice) * product.productquantity %>">
                                Repay
                            </button>
                            
                          <%}%>
                            <%if(product.orderStatus === 'Delivered'){%>
                            <div style="padding-top: 10px;">
                                <a href="/download-invoice/<%= orderItem._id %>" class="genric-btn danger-border small">Download Invoice</a>

                            </div>
                            <%}%>
                        </div>
                        
                    </div>
                    
                    <% }); %>
                    
                </div>
            </div>
            <% }); %>
        </div>
    </div>
</section>
<!-- Repay Order Modal -->
<div class="modal fade" id="repayOrderModal" tabindex="-1" role="dialog" aria-labelledby="repayOrderModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="repayOrderModalLabel">Repay Order</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <input type="hidden" id="repayItemId">
                    <input type="hidden" id="repayProductId">
                    <input type="hidden" id="repayOrderId">
                    <input type="hidden" id="repayAmountValue">
                    <p>Amount: <span id="repayAmount"></span></p>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="confirmRepayBtn">Confirm Repayment</button>
            </div>
        </div>
    </div>
</div>


<!-- Pagination -->
<nav aria-label="Order list pagination">
    <ul class="pagination justify-content-center mt-4">
        <% if (currentPage > 1) { %>
        <li class="page-item">
            <a style="color: black; background-color: white;" class="page-link" href="?page=<%= currentPage - 1 %>" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>
        <% } %>
        <% for (let i = 1; i <= totalPages; i++) { %>
        <li class="page-item <%= currentPage === i ? 'active' : '' %>">
            <a style="color: black; background-color: white;border: none;" class="page-link" href="?page=<%= i %>"><%= i %></a>
        </li>
        <% } %>
        <% if (currentPage < totalPages) { %>
        <li class="page-item">
            <a style="color: black; background-color: white; border: none;" class="page-link" href="?page=<%= currentPage + 1 %>" aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
            </a>
        </li>
        <% } %>
    </ul>
</nav>
<%- include('../layout/userfooter') %>

<!-- Product View Modal -->
<div class="modal fade" id="productModal" tabindex="-1" aria-labelledby="productModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="productModalLabel"></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                        <!-- Product Image -->
                        <img src="" id="productImage" class="img-fluid" alt="Product Image">
                    </div>
                    <div class="col-md-6">
                        <!-- Product Details -->
                        <h4 id="productName"></h4>
                        <p id="productCategory" class="text-muted"></p>
                        <p id="productDescription"></p>
                        <h4>â‚¹<span id="productPrice"></span></h4>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Return Reason Modal -->
<div class="modal fade" id="returnReasonModal" tabindex="-1" aria-labelledby="returnReasonModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="returnReasonModalLabel">Return Reason</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="returnReasonForm">
                    <div class="mb-3">
                        <label for="returnReason" class="form-label">Reason for Return</label>
                        <textarea class="form-control" id="returnReason" rows="3" required></textarea>
                    </div>
                    <div id="err" style="color: #e14b00;"></div>
                    <input type="hidden" id="returnProductId">
                    <input type="hidden" id="returnItemId">
                    <button type="submit" class="btn btn-primary">Submit</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- SweetAlert2 Library -->
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<!-- JavaScript for Modal and Order Management -->
<script>
 document.addEventListener('DOMContentLoaded', function () {
    document.querySelectorAll('.view-product-btn').forEach(button => {
        button.addEventListener('click', function () {
            const productName = this.dataset.productName;
            const productImage = this.dataset.productImage;
            const productPrice = this.dataset.productPrice;
            const productCategory = this.dataset.productCategory;
            const productDescription = this.dataset.productDescription;

            // Update modal content
            document.getElementById('productModalLabel').textContent = productName;
            document.getElementById('productImage').src = productImage;
            document.getElementById('productName').textContent = productName;
            document.getElementById('productPrice').textContent = productPrice;
            document.getElementById('productCategory').textContent = productCategory;
            document.getElementById('productDescription').textContent = productDescription;
        });
    });

    // Cancel Order
    document.querySelectorAll('.cancel-order-btn').forEach(button => {
        button.addEventListener('click', async function () {
            const itemId = this.dataset.itemId;
            const productId = this.dataset.productId;

            const result = await Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, cancel it!'
            });

            if (result.isConfirmed) {
                try {
                    const response = await fetch('/cancelOrder', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ itemId, productId })
                    });

                    const data = await response.json();

                    if (response.ok) {
                        await Swal.fire(
                            'Cancelled!',
                            'Order for the product has been cancelled successfully.',
                            'success'
                        );
                        setTimeout(() => {
                          location.reload();  
                         }, 1000); 

                    } else {
                        Swal.fire(
                            'Error!',
                            data.message || 'An error occurred while cancelling the order.',
                            'error'
                        );
                    }
                } catch (error) {
                    Swal.fire(
                        'Error!',
                        'An error occurred while processing your request.',
                        'error'
                    );
                }
            }
        });
    });

    // Return Order
    document.querySelectorAll('.return-order-btn').forEach(button => {
        button.addEventListener('click', function () {
            const itemId = this.dataset.itemId;
            const productId = this.dataset.productId;

            document.getElementById('returnItemId').value = itemId;
            document.getElementById('returnProductId').value = productId;
        });
    });

    // Handle Return Reason Submission
    document.getElementById('returnReasonForm').addEventListener('submit', async function (e) {
        e.preventDefault();

        const itemId = document.getElementById('returnItemId').value;
        const productId = document.getElementById('returnProductId').value;
        const reason = document.getElementById('returnReason').value.trim();

        if (reason === '') {
            document.getElementById('err').textContent = 'Please provide a reason for return.';
            return;
        }

        try {
            const response = await fetch('/return-product-request', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({  itemId, reason })
            });

            const data = await response.json();

            if (response.ok) {
                await Swal.fire(
                    'Return Requested!',
                    'Your return request has been submitted successfully.',
                    'success'
                );
                setTimeout(() => {
                  
                }, 1000);  
            } else {
                Swal.fire(
                    'Error!',
                    data.message || 'An error occurred while submitting the return request.',
                    'error'
                );
            }
        } catch (error) {
            Swal.fire(
                'Error!',
                'An error occurred while processing your request.',
                'error'
            );
        }
    });
});

//repqyOption

document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('.repay-order-btn').forEach(button => {
            button.addEventListener('click', function () {
                const itemId = this.dataset.itemId;
                const productId = this.dataset.productId;
                const orderId = this.dataset.orderId;  // Ensure this is the correct orderId
                const amount = this.dataset.amount;

                document.getElementById('repayItemId').value = itemId;
                document.getElementById('repayProductId').value = productId;
                document.getElementById('repayOrderId').value = orderId;
                document.getElementById('repayAmount').textContent = amount;
                document.getElementById('repayAmountValue').value = amount;

                const repayOrderModal = new bootstrap.Modal(document.getElementById('repayOrderModal'));
                repayOrderModal.show();
            });
        });

        document.getElementById('confirmRepayBtn').addEventListener('click', async function () {
            const itemId = document.getElementById('repayItemId').value;
            const productId = document.getElementById('repayProductId').value;
            const orderId = document.getElementById('repayOrderId').value;
            const amount = document.getElementById('repayAmountValue').value;

            if (!itemId || !productId || !orderId || !amount) {
                alert("Please provide valid order details.");
                return;
            }

            if (isNaN(amount) || amount <= 0) {
                alert("Invalid amount.");
                return;
            }

            try {
                const response = await fetch('/initiate-repay', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ itemId, productId, orderId, amount })
                });

                const data = await response.json();

                if (response.ok) {
                    var options = {
                        "key": 'rzp_test_GuelVWx5XVbHqs',
                        "amount": amount * 100, 
                        "currency": "INR",
                        "order_id": data.order_id,
                        "handler": function (response) {
                            alert('Payment successful!');
                        },
                        "prefill": {
                            "email": "customer@example.com",
                            "contact": "9999999999"
                        }
                    };
                    var rzp1 = new Razorpay(options);
                    rzp1.open();
                } else {
                    alert('Error initiating payment: ' + data.message);
                }
            } catch (error) {
                console.error('Error processing repayment:', error);
            }
        });
    });


</script>
